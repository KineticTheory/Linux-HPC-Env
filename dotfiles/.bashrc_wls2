# .bashrc_wls
#
# .bashrc_wls is sourced by interactive shells from .bash_profile and .bashrc
#
# Customize these settings to your own preferences...
#------------------------------------------------------------------------------#

if test -n "${verbose}"; then echo "in ~/.bash_wls2"; fi

#------------------------------------------------------------------------------#
# WLS defaults
#------------------------------------------------------------------------------#

# If set, the pattern "**" used in a pathname expansion context will match all
# files and zero or more directories and subdirectories.  shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
set show-all-if-ambiguous on

#------------------------------------------------------------------------------#
# Vendors, etc.
#------------------------------------------------------------------------------#

export SPACK_ROOT=~/spack
if [[ -d $SPACK_ROOT ]]; then
  export PATH=$SPACK_ROOT/bin:$PATH

  MODULES_HOME=`spack location -i lmod`
  if test -d $MODULES_HOME; then
    source $MODULES_HOME/lmod/lmod/init/bash
    module use `\ls -d $SPACK_ROOT/share/spack/lmod/*/Core`
    module load random123 numdiff cmake ack htop lcov mscgen doxygen graphviz
    # module load gcc/10.1.0
    module load gsl metis openblas
    module load eospac # ndi csk
    module load openmpi
    module load parmetis libquo caliper # superlu-dist trilinos
    module load py-cmake-format py-flake8 py-pyflakes py-pycodestyle py-autopep8
    module load clang-format
  fi
fi
export CXX=$(which g++)
export CC=$(which gcc)
export FC=$(which gfortran)

# https://github.com/microsoft/WSL/issues/4106#issuecomment-530006295
# Start X11 server like this:
#   vcxsrv.exe -multiwindow -clipboard -wgl -auth c:\users\107638\.Xauthority
if [[ "${DISPLAY:-notset}" == "notset" ]]; then
  export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
  # Use this logic to avoid using '-ac' with vcxsrv
  run "rm ~/.Xauthority && touch ~/.Xauthority"
  magiccookie=$(echo '3a5a2b2519b8889898ca369875af98c0'|tr -d '\n\r'|md5sum|gawk '{print $1}')
  run "xauth add $DISPLAY . $magiccookie"
  run "cp ~/.Xauthority /mnt/c/Users/107638/.Xauthority"
  unset magiccookie
fi
export LIBGL_ALWAYS_INDIRECT=1
export VENDOR_DIR=~/vendors

if test -n "${verbose}"; then
  echo "DISPLAY    = $DISPLAY"
  echo "TERM       = $TERM"
  echo "VENDOR_DIR = $VENDOR_DIR"
  echo "CXX        = $CXX"
  echo
  echo "\"C:\Program Files\VcXsrv\vcxsrv.exe\" -multiwindow -clipboard -wgl -auth \"c:\users\107638\.Xauthority\""
  echo
fi

# Enable docker

export PATH=~/bin:$PATH

#export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
#export PATH="$PATH:/mnt/c/Program\ Files/Docker/Docker/resources/bin"
#alias docker=docker.exe
#alias docker-compose=docker-compose.exe
#export PATH="$PATH:/mnt/c/Program\ Files/Git/usr/bin"

keychain

if test -n "${verbose}"; then echo "done with ~/.bash_wls2"; fi

#------------------------------------------------------------------------------#
# End .bash_wls
#------------------------------------------------------------------------------#
