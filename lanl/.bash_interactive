# .bashrc_interactive
#
# .bashrc_interactive is sourced by interactive shells from
# .bash_profile and .bashrc
#
# Customize these settings to your own preferences...
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
# User Customizations
#------------------------------------------------------------------------------#
if [[ "${INTERACTIVE:-false}" == "true" ]]; then

  if test -n "${verbose}"; then echo "in ~/.bash_interactive"; fi

  # Tune the bash shell ------------------------------------------------------#
  # See draco/environment/bashrc/.bashrc.

  # Aliases ---------------------------------------------------------------------#

  alias cmakedebug='cmake -Wdeprecated -Wdev'
  alias cmakebc='cmake -DGCC_ENABLE_GLIBCXX_DEBUG=ON'
  alias cmakedebugfast='cmake -DBUILD_TESTING=OFF'
  alias cmakerel='cmake -DCMAKE_BUILD_TYPE=RELEASE'
  alias cmakerelfast='cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_TESTING=OFF'
  alias debug='totalview $* 2>/dev/null'
  alias eclipse='eclipse -data /var/tmp/kgt/workspace -nosplash'
  alias ehco='echo'
  alias em='emacsclient -c --alternate-editor=emacs'
  if [[ -x /bin/emacs ]]; then
    alias emacs='/bin/emacs -fn Inconsolata &> $HOME/emacs.log'
  fi
  #alias emacs='/bin/emacs -fn 6x13 &> /dev/null'
  alias gitk='gitk --all'
  alias gt='gnome-terminal'
  alias mpiruntv='mpirun -tv $* 2>/dev/null'
  alias qtcreator='qtcreator -noload Welcome'
  alias rtt='resettermtitle'
  alias vi='emacs -nw'
  alias vulcan='ssh -t ihpc-gate1.lanl.gov ssh vulcan.llnl.gov'
  alias wget='wget --user-agent=Mozilla --content-disposition -E -c'
  if [[ `which okular 2> /dev/null | wc -l` == 1 ]]; then
    alias xpdf='okular'
  else
    alias xpdf='evince'
    # atril
  fi

  if [[ -f ~/.ssh/xfkeytab ]]; then
    alias kerbp='kinit -f -l 8h -kt ~/.ssh/xfkeytab kellytpush@lanl.gov'
  fi
  if [[ -f ~/.ssh/cron.keytab ]]; then
    alias kerb='kinit -f -l 8h -kt ~/.ssh/cron.keytab kellyt@lanl.gov'
  fi

  # Kerberos
  alias kerb='kinit -f -l 8h -kt ~/.ssh/cron.keytab kellyt@lanl.gov'

  # add_to_path /scratch/regress/draco/regression PATH

  # Functions ----------------------------------------------------------------#
  function eapde ()
  {
    export EAP_INHIBIT_KSM=1
    export L_EAP_ENV=new
    source /usr/projects/eap/dotfiles/.bashrc
    module unload paraview
    module list
  }

  # Convert dos2unix ---------------------------------------------------------#
  function dos2unix ()
  {
    dosfile=$1
    unixfile=$dosfile
    tmp=`mktemp`
    awk '{ sub("\r$", ""); print }' $dosfile > $tmp
    cp $tmp $unixfile
  }

  function unix2dos ()
  {
    unixfile=$1
    dosfile=$unixfile
    tmp=`mktemp`
    awk 'sub("$", "\r")' $unixfile > $tmp
    cp $tmp $dosfile
  }

  function = ()
  {
    calc="${@//p/+}";
    calc="${calc//x/*}";
    bc -l <<< "scale=10;$calc"
  }

  # SSH keys ----------------------------------------------------------- #
  function reloadkeys()
  {
    if [[ `ssh-add -L | wc -l` == 0 ]]; then
      MYHOSTNAME="`uname -n`"
      if [[ `which keychain | grep -c keychain` == 0 ]]; then
        if [[ -x $VENDOR_DIR/keychain-2.8.5/keychain ]]; then
          export PATH=$PATH:$VENDOR_DIR/keychain-2.8.5/keychain
        fi
      fi
      if [[ `which keychain | grep -c keychain` -gt 0 ]]; then
        eval "keychain --agents ssh $HOME/.ssh/id_rsa"
      fi
      run "source $HOME/.keychain/$MYHOSTNAME-sh"
    fi
  }
  reloadkeys

  if ! [[ $TERM ]]; then
    export TERM=xterm-256color
  fi

  # LaTeX ---------------------------------------------------------------------- #

  # extradirs="$HOME/imcdoc/sty"
  # for mydir in ${extradirs}; do
  #     if test -z "`echo $TEXINPUTS | grep $mydir`" && test -d $mydir; then
  #         export TEXINPUTS=$mydir:$TEXINPUTS
  #     fi
  # done
  # extradirs="$HOME/imcdoc/bib"
  # for mydir in ${extradirs}; do
  #     if test -z "`echo $BSTINPUTS | grep $mydir`" && test -d $mydir; then
  #         export BSTINPUTS=$mydir:$BSTINPUTS
  #     fi
  # done
  # extradirs="$HOME/imcdoc/bib"
  # for mydir in ${extradirs}; do
  #     if test -z "`echo $BIBINPUTS | grep $mydir`" && test -d $mydir; then
  #         export BIBINPUTS=$mydir:$BIBINPUTS
  #     fi
  # done
  # unset extradirs

fi # if test "$INTERACTIVE" = "true"

#------------------------------------------------------------------------------#
# End .bash_interactive
#------------------------------------------------------------------------------#
